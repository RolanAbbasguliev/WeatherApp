{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class WeatherService {\n  constructor(http) {\n    this.http = http;\n  }\n  getWeatherTodayByLocationName(location) {\n    return this.http.get(`http://api.weatherapi.com/v1/current.json?key=7ddee4b4456940b09e962342232504&q=${location}&aqi=no`);\n  }\n  getWeatherDailyByLocationName(location) {\n    return this.http.get(`https://api.tomorrow.io/v4/weather/forecast?location=${location}&timesteps=daily&apikey=jQ8ZlsPTkqD7GkDAPJr2J63myGf5bklW`);\n  }\n}\nWeatherService.ɵfac = function WeatherService_Factory(t) {\n  return new (t || WeatherService)(i0.ɵɵinject(i1.HttpClient));\n};\nWeatherService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: WeatherService,\n  factory: WeatherService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,cAAc;EACzBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAe;EAEvCC,6BAA6B,CAACC,QAAgB;IAC5C,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAClB,kFAAkFD,QAAQ,SAAS,CACpG;EACH;EAEAE,6BAA6B,CAACF,QAAgB;IAC5C,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAClB,wDAAwDD,QAAQ,0DAA0D,CAC3H;EACH;;AAbWJ,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAO,SAAdP,cAAc;EAAAQ,YAFb;AAAM","names":["WeatherService","constructor","http","getWeatherTodayByLocationName","location","get","getWeatherDailyByLocationName","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\abbasgulyev\\Projects\\WeatherApp\\front\\src\\app\\services\\weather.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { IWeatherDaily, IWeatherToday } from '../models/weather';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class WeatherService {\n  constructor(private http: HttpClient) {}\n\n  getWeatherTodayByLocationName(location: string): Observable<IWeatherToday> {\n    return this.http.get<IWeatherToday>(\n      `http://api.weatherapi.com/v1/current.json?key=7ddee4b4456940b09e962342232504&q=${location}&aqi=no`\n    );\n  }\n\n  getWeatherDailyByLocationName(location: string): Observable<IWeatherDaily> {\n    return this.http.get<IWeatherDaily>(\n      `https://api.tomorrow.io/v4/weather/forecast?location=${location}&timesteps=daily&apikey=jQ8ZlsPTkqD7GkDAPJr2J63myGf5bklW`\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}